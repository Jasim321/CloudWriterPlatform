openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /books/api/books/:
    get:
      operationId: books_api_books_list
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
    post:
      operationId: books_api_books_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /books/api/books/{id}/:
    get:
      operationId: books_api_books_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: books_api_books_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: books_api_books_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: books_api_books_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /books/api/collaborations/:
    get:
      operationId: books_api_collaborations_list
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collaboration'
          description: ''
    post:
      operationId: books_api_collaborations_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collaboration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
  /books/api/collaborations/{id}/:
    get:
      operationId: books_api_collaborations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    put:
      operationId: books_api_collaborations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collaboration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    patch:
      operationId: books_api_collaborations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    delete:
      operationId: books_api_collaborations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /books/api/collaborations/{id}/revoke/:
    put:
      operationId: books_api_collaborations_revoke_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collaboration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    patch:
      operationId: books_api_collaborations_revoke_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
  /books/api/grant-access/:
    put:
      operationId: books_api_grant_access_update
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collaboration'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
    patch:
      operationId: books_api_grant_access_partial_update
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollaboration'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: ''
  /books/api/login:
    post:
      operationId: books_api_login_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /books/api/logout:
    post:
      operationId: books_api_logout_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /books/api/sections/:
    get:
      operationId: books_api_sections_list
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Section'
          description: ''
    post:
      operationId: books_api_sections_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Section'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
  /books/api/sections/{id}/:
    get:
      operationId: books_api_sections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    put:
      operationId: books_api_sections_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Section'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    patch:
      operationId: books_api_sections_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSection'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    delete:
      operationId: books_api_sections_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /books/api/signup:
    post:
      operationId: books_api_signup_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /books/api/subsections/:
    get:
      operationId: books_api_subsections_list
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subsection'
          description: ''
    post:
      operationId: books_api_subsections_create
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subsection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subsection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subsection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsection'
          description: ''
  /books/api/subsections/{id}/:
    get:
      operationId: books_api_subsections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsection'
          description: ''
    put:
      operationId: books_api_subsections_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subsection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subsection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subsection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsection'
          description: ''
    patch:
      operationId: books_api_subsections_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubsection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubsection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubsection'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsection'
          description: ''
    delete:
      operationId: books_api_subsections_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - books
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: integer
        collaborators:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - author
      - collaborators
      - id
      - title
    Collaboration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          $ref: '#/components/schemas/CollaborationRoleEnum'
        can_edit:
          type: boolean
        user:
          type: integer
        book:
          type: integer
      required:
      - book
      - id
      - user
    CollaborationRoleEnum:
      enum:
      - Author
      - Collaborator
      type: string
      description: |-
        * `Author` - Author
        * `Collaborator` - Collaborator
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: integer
        collaborators:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedCollaboration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          $ref: '#/components/schemas/CollaborationRoleEnum'
        can_edit:
          type: boolean
        user:
          type: integer
        book:
          type: integer
    PatchedSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        book:
          type: integer
        parent_section:
          type: integer
          nullable: true
    PatchedSubsection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        parent_section:
          type: integer
    Section:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        book:
          type: integer
        parent_section:
          type: integer
          nullable: true
      required:
      - book
      - id
      - title
    Subsection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        parent_section:
          type: integer
      required:
      - id
      - parent_section
      - title
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        password:
          type: string
      required:
      - email
      - name
      - password
    UserProfile:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        role:
          $ref: '#/components/schemas/UserProfileRoleEnum'
      required:
      - email
      - password
      - username
    UserProfileRoleEnum:
      enum:
      - author
      - collaborator
      type: string
      description: |-
        * `author` - Author
        * `collaborator` - Collaborator
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
